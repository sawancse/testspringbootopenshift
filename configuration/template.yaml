apiVersion: v1
kind: Template
metadata:
  name: "test-springboot-jenkins-openshift"
  annotations:
    openshift.io/display-name: JenkinsOpenshift
    iconClass: fa fa-code
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "test-springboot-jenkins-openshift"
      name: "test-springboot-jenkins-openshift"
    spec:
      replicas: 1
      selector:
        app: "test-springboot-jenkins-openshift"
        deploymentconfig: "test-springboot-jenkins-openshift"
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: "test-springboot-jenkins-openshift"
            deploymentconfig: "test-springboot-jenkins-openshift"
        spec:
          containers:
            - image: test-springboot-jenkins-openshift:latest
              name: "test-springboot-jenkins-openshift"
              ports:
                - containerPort: 8084
                  protocol: TCP
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - "test-springboot-jenkins-openshift"
            from:
              kind: ImageStreamTag
              name: test-springboot-jenkins-openshift:latest
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: "test-springboot-jenkins-openshift"
      name: "test-springboot-jenkins-openshift"
    spec:
      ports:
        - name: 8090-tcp
          port: 8090
          protocol: TCP
          targetPort: 8090
      selector:
        app: "test-springboot-jenkins-openshift"
        deploymentconfig: "test-springboot-jenkins-openshift"
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: "test-springboot-jenkins-openshift"
      name: "test-springboot-jenkins-openshift"
    spec:
      to:
        kind: Service
        name: "test-springboot-jenkins-openshift"